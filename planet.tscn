[gd_scene load_steps=37 format=4 uid="uid://7m4dqlk8r5y6"]

[ext_resource type="Script" uid="uid://vxvuo02egeai" path="res://Scripts/Procedural Planet Generation/Planet.gd" id="1_6vnuc"]
[ext_resource type="Curve" uid="uid://c2gpbjcjln5ht" path="res://Assets/planet_LOD_Curve.tres" id="2_3w4t4"]
[ext_resource type="Script" uid="uid://dqlui2ho0sr6j" path="res://Scripts/Procedural Planet Generation/TerrainFace.gd" id="2_4jp6r"]
[ext_resource type="Script" uid="uid://dqpjojp8k1ghw" path="res://Scripts/Procedural Planet Generation/PlanetNoise.gd" id="2_b1fwg"]
[ext_resource type="Texture2D" uid="uid://dcj1dq4octv5j" path="res://Assets/Planet Colours/planet_terrestrial.tres" id="2_k0a6c"]
[ext_resource type="Script" uid="uid://bi8oy8he1sf8t" path="res://Scripts/Procedural Planet Generation/PlanetData.gd" id="2_pdx0l"]
[ext_resource type="Material" uid="uid://dl31udjx1urh2" path="res://Assets/Materials/planet_shader_material.tres" id="3_ew6a1"]
[ext_resource type="Shader" uid="uid://cp5gisrkx3dq2" path="res://Assets/Shaders/planet_shader.gdshader" id="5_s8jo7"]

[sub_resource type="FastNoiseLite" id="FastNoiseLite_2c5qk"]
frequency = 1.0

[sub_resource type="Resource" id="Resource_bjoya"]
script = ExtResource("2_b1fwg")
min_height = 0.2
amplitude = 0.4
height_map = SubResource("FastNoiseLite_2c5qk")

[sub_resource type="Resource" id="Resource_v7hk1"]
resource_local_to_scene = true
script = ExtResource("2_pdx0l")
atmosphere_type = 1
resolution = 7
LODCurve = ExtResource("2_3w4t4")
planet_noise = Array[ExtResource("2_b1fwg")]([SubResource("Resource_bjoya")])
planet_colour = ExtResource("2_k0a6c")
planet_material = ExtResource("3_ew6a1")

[sub_resource type="ShaderMaterial" id="ShaderMaterial_bmu3h"]
render_priority = 0
shader = ExtResource("5_s8jo7")
shader_parameter/min_height = 0.99999994
shader_parameter/max_height = 1.2626806
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="Shader" id="Shader_hs5tw"]
code = "shader_type spatial;

// use uniforms to pass values between code and shaders
uniform float min_height;
uniform float max_height;
// gradient texture to assign colours to planet regions
uniform sampler2D height_colour;

// variable interpolated between vertices
varying float height;

void vertex() {
	// given the origin of the mesh is the centre of the planet,
	// the height is just the length of the current vertex in local space
	height = length(VERTEX);

}

void fragment() {
	// Called for every pixel the material is visible on.
	// linear interpolation of current height between min and max height
	// gives a value for the current height between 0 and 1
	float t = (height - min_height)/(max_height - min_height);
	
	// sample the height_colour texture - because it's a 1D gradient, always use y=0 and set x = t
	// get rgb to remove any alpha channel
	vec3 colour = texture(height_colour, vec2(t, 0.0)).rgb;
	
	// set colour
	ALBEDO = colour;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cit8o"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_hs5tw")
shader_parameter/min_height = 1.0
shader_parameter/max_height = 1.27799
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="ArrayMesh" id="ArrayMesh_p30nt"]
_surfaces = [{
"aabb": AABB(-0.7518671, 0.57735026, -0.72621256, 1.4589739, 0.45777166, 1.4333193),
"attribute_data": PackedByteArray
"format": 34359742487,
"index_count": 216,
"index_data": PackedByteArray("BwAIAAAACAABAAAACAAJAAEACQACAAEACQAKAAIACgADAAIACgALAAMACwAEAAMACwAMAAQADAAFAAQADAANAAUADQAGAAUADgAPAAcADwAIAAcADwAQAAgAEAAJAAgAEAARAAkAEQAKAAkAEQASAAoAEgALAAoAEgATAAsAEwAMAAsAEwAUAAwAFAANAAwAFQAWAA4AFgAPAA4AFgAXAA8AFwAQAA8AFwAYABAAGAARABAAGAAZABEAGQASABEAGQAaABIAGgATABIAGgAbABMAGwAUABMAHAAdABUAHQAWABUAHQAeABYAHgAXABYAHgAfABcAHwAYABcAHwAgABgAIAAZABgAIAAhABkAIQAaABkAIQAiABoAIgAbABoAIwAkABwAJAAdABwAJAAlAB0AJQAeAB0AJQAmAB4AJgAfAB4AJgAnAB8AJwAgAB8AJwAoACAAKAAhACAAKAApACEAKQAiACEAKgArACMAKwAkACMAKwAsACQALAAlACQALAAtACUALQAmACUALQAuACYALgAnACYALgAvACcALwAoACcALwAwACgAMAApACgA"),
"material": SubResource("ShaderMaterial_cit8o"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 49,
"vertex_data": PackedByteArray("Os0TvzrNEz86zRM/amPHvioKKT8qCik/1ntFvmsCMj9rAjI/AAAAAPMENT/zBDU/pBFFPrCiMT+wojE/ohHFPsMSJz/DEic/In4ZPyJ+GT8ifhk/wxInv8MSJz+iEcU+kGbhvqwwTD+QZuE+jSJtvqA3aj9dIPw+AAAAAGs7dD8sjAI//o1kPhW+YT/uAPM+rcPePkvNST+tw94+wxInP8MSJz+iEcU+sKIxv7CiMT+iEUU+6tjsvgQGXD+tw14+VrF3vqb+fD9WsXc+AAAAAOB+hD8kioA+7dhsPszqcT/q2Gw+6tjsPgQGXD+tw14+sKIxP7CiMT+iEUU+SkI9v0pCPT8AAAAA7lvxvlLFYT8AAAAA7ltxvovJeD8AAAAAAAAAAAAAgD8AAAAA1Rp2PtOtfT8AAAAA7lvxPlLFYT8AAAAA8wQ1P/MENT8AAAAAXXpAv116QD8AiVW+6tjsvgQGXD+ww16+6thsvszqcT/t2Gy+AAAAAM1hgT+9CXu+6nx3PhjJfD/qfHe+ysn3PvAvZj8GDmm+sKIxP7CiMT+kEUW+wxInv8MSJz+iEcW+rcPevkvNST+tw96+rcNevgQGXD/q2Oy+AAAAAO2UcT+AIQG/KEt+Pi0qez9ULwe/gm8BP9OCaj+CbwG/oGwtP6BsLT9mj8y+Os0TvzrNEz86zRO/ohHFvsMSJz/DEie/ohFFvrCiMT+wojG/AAAAANNoNz/TaDe/mTlKPntINj97SDa/tknbPhHpOT8R6Tm/g+0cP4PtHD+D7Ry/9VYbsQBy4qOOX9SxFHB6omNykLQiZ6WiVopdtxZT+au4lYi5PEDIt6qeP7x7N5fDXJlFzaAv/scIU2K4BGNDqIhWYLhIY9GnLWfYv5lVlaohiX/Gpj7DtUSaLr62MozARaQSuWg9acYTpT+8RD7pyERUeMHbUgurrlPvxcZL8qt5X4jWujJ2sCWEeuyyEf7Ah5/vzfkzEcyyqDzGzz7ezhiuub4xRiLPU1l+0ZA6Zq79VvLTBjgNrhBf2uK8IaWxd3UB+z0Ft7qfmyrf1SW+zByuWcr6QBTS5bS2x+hH7dMxRjve3CjFpxpP2d93JOKr/0/H4nghOatNan70ZQxatYSVQektGl/KCrPWyMFFidMrvr7EK1Hn1fQw2NlVOHufTzuC4QktRKAzPwzmkyg6oLVA7+wWJgieJLAF/dETT6JHw57Sf0OO2djNcryJZvTWBDgB3BEyg6GjNoXevjFsn8c9XeveKP2coDn78IgtDZijNOv4dzaYkRnQauojNXWLgd6Kx9umXsg=")
}]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_ndovs"]
data = PackedVector3Array(-0.6526, 0.6526, 0.3849, -0.4402, 0.7976, 0.4402, -0.57739997, 0.57739997, 0.57739997, -0.4402, 0.7976, 0.4402, -0.38939998, 0.66029996, 0.66029996, -0.57739997, 0.57739997, 0.57739997, -0.4402, 0.7976, 0.4402, -0.2316, 0.9149, 0.4924, -0.38939998, 0.66029996, 0.66029996, -0.2316, 0.9149, 0.4924, -0.1929, 0.6953, 0.6953, -0.38939998, 0.66029996, 0.66029996, -0.2316, 0.9149, 0.4924, 0, 0.954, 0.51, -0.1929, 0.6953, 0.6953, 0, 0.954, 0.51, 0, 0.7071, 0.7071, -0.1929, 0.6953, 0.6953, 0, 0.954, 0.51, 0.2232, 0.8818, 0.4746, 0, 0.7071, 0.7071, 0.2232, 0.8818, 0.4746, 0.1925, 0.6939, 0.6939, 0, 0.7071, 0.7071, 0.2232, 0.8818, 0.4746, 0.4351, 0.7883, 0.4351, 0.1925, 0.6939, 0.6939, 0.4351, 0.7883, 0.4351, 0.3849, 0.6526, 0.6526, 0.1925, 0.6939, 0.6939, 0.4351, 0.7883, 0.4351, 0.6526, 0.6526, 0.3849, 0.3849, 0.6526, 0.6526, 0.6526, 0.6526, 0.3849, 0.59959996, 0.59959996, 0.59959996, 0.3849, 0.6526, 0.6526, -0.6939, 0.6939, 0.1925, -0.4626, 0.8595, 0.2175, -0.6526, 0.6526, 0.3849, -0.4626, 0.8595, 0.2175, -0.4402, 0.7976, 0.4402, -0.6526, 0.6526, 0.3849, -0.4626, 0.8595, 0.2175, -0.2419, 0.98829997, 0.2419, -0.4402, 0.7976, 0.4402, -0.2419, 0.98829997, 0.2419, -0.2316, 0.9149, 0.4924, -0.4402, 0.7976, 0.4402, -0.2419, 0.98829997, 0.2419, 0, 1.0351, 0.2511, -0.2316, 0.9149, 0.4924, 0, 1.0351, 0.2511, 0, 0.954, 0.51, -0.2316, 0.9149, 0.4924, 0, 1.0351, 0.2511, 0.2313, 0.945, 0.2313, 0, 0.954, 0.51, 0.2313, 0.945, 0.2313, 0.2232, 0.8818, 0.4746, 0, 0.954, 0.51, 0.2313, 0.945, 0.2313, 0.4626, 0.8595, 0.2175, 0.2232, 0.8818, 0.4746, 0.4626, 0.8595, 0.2175, 0.4351, 0.7883, 0.4351, 0.2232, 0.8818, 0.4746, 0.4626, 0.8595, 0.2175, 0.6939, 0.6939, 0.1925, 0.4351, 0.7883, 0.4351, 0.6939, 0.6939, 0.1925, 0.6526, 0.6526, 0.3849, 0.4351, 0.7883, 0.4351, -0.73929995, 0.73929995, 0, -0.4714, 0.88189995, 0, -0.6939, 0.6939, 0.1925, -0.4714, 0.88189995, 0, -0.4626, 0.8595, 0.2175, -0.6939, 0.6939, 0.1925, -0.4714, 0.88189995, 0, -0.2357, 0.97179997, 0, -0.4626, 0.8595, 0.2175, -0.2357, 0.97179997, 0, -0.2419, 0.98829997, 0.2419, -0.4626, 0.8595, 0.2175, -0.2357, 0.97179997, 0, 0, 1, 0, -0.2419, 0.98829997, 0.2419, 0, 1, 0, 0, 1.0351, 0.2511, -0.2419, 0.98829997, 0.2419, 0, 1, 0, 0.2403, 0.9909, 0, 0, 1.0351, 0.2511, 0.2403, 0.9909, 0, 0.2313, 0.945, 0.2313, 0, 1.0351, 0.2511, 0.2403, 0.9909, 0, 0.4714, 0.88189995, 0, 0.2313, 0.945, 0.2313, 0.4714, 0.88189995, 0, 0.4626, 0.8595, 0.2175, 0.2313, 0.945, 0.2313, 0.4714, 0.88189995, 0, 0.7071, 0.7071, 0, 0.4626, 0.8595, 0.2175, 0.7071, 0.7071, 0, 0.6939, 0.6939, 0.1925, 0.4626, 0.8595, 0.2175, -0.75189996, 0.75189996, -0.2085, -0.4626, 0.8595, -0.2175, -0.73929995, 0.73929995, 0, -0.4626, 0.8595, -0.2175, -0.4714, 0.88189995, 0, -0.73929995, 0.73929995, 0, -0.4626, 0.8595, -0.2175, -0.2313, 0.945, -0.2313, -0.4714, 0.88189995, 0, -0.2313, 0.945, -0.2313, -0.2357, 0.97179997, 0, -0.4714, 0.88189995, 0, -0.2313, 0.945, -0.2313, 0, 1.0108, -0.2452, -0.2357, 0.97179997, 0, 0, 1.0108, -0.2452, 0, 1, 0, -0.2357, 0.97179997, 0, 0, 1.0108, -0.2452, 0.2417, 0.9874, -0.2417, 0, 1, 0, 0.2417, 0.9874, -0.2417, 0.2403, 0.9909, 0, 0, 1, 0, 0.2417, 0.9874, -0.2417, 0.484, 0.89919996, -0.2276, 0.2403, 0.9909, 0, 0.484, 0.89919996, -0.2276, 0.4714, 0.88189995, 0, 0.2403, 0.9909, 0, 0.484, 0.89919996, -0.2276, 0.6939, 0.6939, -0.1925, 0.4714, 0.88189995, 0, 0.6939, 0.6939, -0.1925, 0.7071, 0.7071, 0, 0.4714, 0.88189995, 0, -0.6526, 0.6526, -0.3849, -0.4351, 0.7883, -0.4351, -0.75189996, 0.75189996, -0.2085, -0.4351, 0.7883, -0.4351, -0.4626, 0.8595, -0.2175, -0.75189996, 0.75189996, -0.2085, -0.4351, 0.7883, -0.4351, -0.2175, 0.8595, -0.4626, -0.4626, 0.8595, -0.2175, -0.2175, 0.8595, -0.4626, -0.2313, 0.945, -0.2313, -0.4626, 0.8595, -0.2175, -0.2175, 0.8595, -0.4626, 0, 0.94369996, -0.5044, -0.2313, 0.945, -0.2313, 0, 0.94369996, -0.5044, 0, 1.0108, -0.2452, -0.2313, 0.945, -0.2313, 0, 0.94369996, -0.5044, 0.2483, 0.98109996, -0.5281, 0, 1.0108, -0.2452, 0.2483, 0.98109996, -0.5281, 0.2417, 0.9874, -0.2417, 0, 1.0108, -0.2452, 0.2483, 0.98109996, -0.5281, 0.5056, 0.91609997, -0.5056, 0.2417, 0.9874, -0.2417, 0.5056, 0.91609997, -0.5056, 0.484, 0.89919996, -0.2276, 0.2417, 0.9874, -0.2417, 0.5056, 0.91609997, -0.5056, 0.6774, 0.6774, -0.39949998, 0.484, 0.89919996, -0.2276, 0.6774, 0.6774, -0.39949998, 0.6939, 0.6939, -0.1925, 0.484, 0.89919996, -0.2276, -0.57739997, 0.57739997, -0.57739997, -0.3849, 0.6526, -0.6526, -0.6526, 0.6526, -0.3849, -0.3849, 0.6526, -0.6526, -0.4351, 0.7883, -0.4351, -0.6526, 0.6526, -0.3849, -0.3849, 0.6526, -0.6526, -0.1925, 0.6939, -0.6939, -0.4351, 0.7883, -0.4351, -0.1925, 0.6939, -0.6939, -0.2175, 0.8595, -0.4626, -0.4351, 0.7883, -0.4351, -0.1925, 0.6939, -0.6939, 0, 0.71639997, -0.71639997, -0.2175, 0.8595, -0.4626, 0, 0.71639997, -0.71639997, 0, 0.94369996, -0.5044, -0.2175, 0.8595, -0.4626, 0, 0.71639997, -0.71639997, 0.19749999, 0.71199995, -0.71199995, 0, 0.94369996, -0.5044, 0.19749999, 0.71199995, -0.71199995, 0.2483, 0.98109996, -0.5281, 0, 0.94369996, -0.5044, 0.19749999, 0.71199995, -0.71199995, 0.4283, 0.7262, -0.7262, 0.2483, 0.98109996, -0.5281, 0.4283, 0.7262, -0.7262, 0.5056, 0.91609997, -0.5056, 0.2483, 0.98109996, -0.5281, 0.4283, 0.7262, -0.7262, 0.613, 0.613, -0.613, 0.5056, 0.91609997, -0.5056, 0.613, 0.613, -0.613, 0.6774, 0.6774, -0.39949998, 0.5056, 0.91609997, -0.5056)

[sub_resource type="Shader" id="Shader_j8jks"]
code = "shader_type spatial;

// use uniforms to pass values between code and shaders
uniform float min_height;
uniform float max_height;
// gradient texture to assign colours to planet regions
uniform sampler2D height_colour;

// variable interpolated between vertices
varying float height;

void vertex() {
	// given the origin of the mesh is the centre of the planet,
	// the height is just the length of the current vertex in local space
	height = length(VERTEX);

}

void fragment() {
	// Called for every pixel the material is visible on.
	// linear interpolation of current height between min and max height
	// gives a value for the current height between 0 and 1
	float t = (height - min_height)/(max_height - min_height);
	
	// sample the height_colour texture - because it's a 1D gradient, always use y=0 and set x = t
	// get rgb to remove any alpha channel
	vec3 colour = texture(height_colour, vec2(t, 0.0)).rgb;
	
	// set colour
	ALBEDO = colour;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_fpsbw"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_j8jks")
shader_parameter/min_height = 1.0
shader_parameter/max_height = 1.27799
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="ArrayMesh" id="ArrayMesh_lmtad"]
_surfaces = [{
"aabb": AABB(-0.78541476, -1.0287807, -0.716306, 1.5560496, 0.45143044, 1.4449879),
"attribute_data": PackedByteArray("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="),
"format": 34359742487,
"index_count": 216,
"index_data": PackedByteArray("BwAIAAAACAABAAAACAAJAAEACQACAAEACQAKAAIACgADAAIACgALAAMACwAEAAMACwAMAAQADAAFAAQADAANAAUADQAGAAUADgAPAAcADwAIAAcADwAQAAgAEAAJAAgAEAARAAkAEQAKAAkAEQASAAoAEgALAAoAEgATAAsAEwAMAAsAEwAUAAwAFAANAAwAFQAWAA4AFgAPAA4AFgAXAA8AFwAQAA8AFwAYABAAGAARABAAGAAZABEAGQASABEAGQAaABIAGgATABIAGgAbABMAGwAUABMAHAAdABUAHQAWABUAHQAeABYAHgAXABYAHgAfABcAHwAYABcAHwAgABgAIAAZABgAIAAhABkAIQAaABkAIQAiABoAIgAbABoAIwAkABwAJAAdABwAJAAlAB0AJQAeAB0AJQAmAB4AJgAfAB4AJgAnAB8AJwAgAB8AJwAoACAAKAAhACAAKAApACEAKQAiACEAKgArACMAKwAkACMAKwAsACQALAAlACQALAAtACUALQAmACUALQAuACYALgAnACYALgAvACcALwAoACcALwAwACgAMAApACgA"),
"material": SubResource("ShaderMaterial_fpsbw"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 49,
"vertex_data": PackedByteArray("2NAUP9jQFL/Y0BQ/mQjcPuaKOr/mijo/k55KPoKjNr+CozY/AAAAAMNuNr/DbjY/pBFFvrCiMb+wojE/ohHFvsMSJ7/DEic/Os0TvzrNE786zRM/wxInP8MSJ7+iEcU+b6f6PjERY79vp/o+5Fd3PtBMdL92fQM/AAAAAFLFYb/uW/E+sMNevgQGXL/q2Ow+rcPevkvNSb+tw94+wxInv8MSJ7+iEcU+uR82P7kfNr9gDEo+kqMLP1a4gb8EVoM+muyAPhavg7+a7IA+AAAAAIvJeL/uW3E+7dhsvszqcb/q2Gw+6tjsvgQGXL+tw14+8RBJv/EQSb8ZEF8+th04P7YdOL8AAAAAiuMEP7yceL8AAAAAz4VzPngEe78AAAAAAAAAAAAAgL8AAAAA8VtxvovJeL8AAAAA7lvxvlLFYb8AAAAAdrI3v3ayN78AAAAA0PMxP9DzMb+ka0W+p4n2PosGZb/s4Ge+gF13PgSpfL+DXXe+AAAAAIvJeL/xW3G+7Nhsvszqcb/s2Gy+6tjsvgQGXL+ww16+GCQyvxgkMr80oUW+U0hFP1NIRb+ls+i+7/fnPtMjUr/v9+e+rcNePgQGXL/q2Oy+AAAAAFLFYb/uW/G+sMNevgQGXL/q2Oy+rcPevkvNSb+tw96+wxInv8MSJ7+iEcW+X0UhP19FIb9fRSG/LvrPPkJSML9CUjC/ohFFPrCiMb+wojG/AAAAANRfN7/UXze/pBFFvrCiMb+wojG/ohHFvsMSJ7/DEie/0iEUv9IhFL/SIRS/sL9yYhRVhKpjm4BN8DMnmlVzG0ZQJxiU0XhqOXkZMJ31a9VBdBE0noZeW0lYCijcAVz7RxccFtxawZ1hflZHqwupIE0FOTiipXnrNKQUlqAocTc5Egx2oxxtzzmXA7KnlmPRRJABNNrFWhJSSxvgk8nLXlJWY46sLa65OiQ7g6plgGYQpALRttdt8SbIDuHQjmriKl0SXNIWYRkrwiFr0YZjRzEXHHfUBMvPPWtm1akXu38sYU2/qzSQNwSDEUS9BHIMCCoO2MOdZpAZGx4hzFJTHyxsOZ3SRk21Jec4GM9isLQu1z6grI7D3CirW2+ptabqCygueLZVY64G0RjtwKNVLhWxKKfHKEfZJuc8Nc4FQrkul0Vr0DusSBOLNT+zOLDDFH47v7HsucAOeUswroBPXgMHOm+2E0fQETgvJb4mPWwhfzqgxkw5vCogRCPLldOhGtF4HJ2SvawNb1EnrM65Ewq2S3CuerZjA4dHkLCpQQoPDz2rt085qhskON29BTT8JXE+NcQ=")
}]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_76h37"]
data = PackedVector3Array(0.6526, -0.6526, 0.3849, 0.48959997, -0.88699996, 0.48959997, 0.58129996, -0.58129996, 0.58129996, 0.48959997, -0.88699996, 0.48959997, 0.4298, -0.7287, 0.7287, 0.58129996, -0.58129996, 0.58129996, 0.48959997, -0.88699996, 0.48959997, 0.24149999, -0.9543, 0.5136, 0.4298, -0.7287, 0.7287, 0.24149999, -0.9543, 0.5136, 0.1979, -0.7134, 0.7134, 0.4298, -0.7287, 0.7287, 0.24149999, -0.9543, 0.5136, 0, -0.88189995, 0.4714, 0.1979, -0.7134, 0.7134, 0, -0.88189995, 0.4714, 0, -0.7126, 0.7126, 0.1979, -0.7134, 0.7134, 0, -0.88189995, 0.4714, -0.2175, -0.8595, 0.4626, 0, -0.7126, 0.7126, -0.2175, -0.8595, 0.4626, -0.1925, -0.6939, 0.6939, 0, -0.7126, 0.7126, -0.2175, -0.8595, 0.4626, -0.4351, -0.7883, 0.4351, -0.1925, -0.6939, 0.6939, -0.4351, -0.7883, 0.4351, -0.3849, -0.6526, 0.6526, -0.1925, -0.6939, 0.6939, -0.4351, -0.7883, 0.4351, -0.6526, -0.6526, 0.3849, -0.3849, -0.6526, 0.6526, -0.6526, -0.6526, 0.3849, -0.57739997, -0.57739997, 0.57739997, -0.3849, -0.6526, 0.6526, 0.7114, -0.7114, 0.1973, 0.5455, -1.0134, 0.2565, 0.6526, -0.6526, 0.3849, 0.5455, -1.0134, 0.2565, 0.48959997, -0.88699996, 0.48959997, 0.6526, -0.6526, 0.3849, 0.5455, -1.0134, 0.2565, 0.2518, -1.0288, 0.2518, 0.48959997, -0.88699996, 0.48959997, 0.2518, -1.0288, 0.2518, 0.24149999, -0.9543, 0.5136, 0.48959997, -0.88699996, 0.48959997, 0.2518, -1.0288, 0.2518, 0, -0.97179997, 0.2357, 0.24149999, -0.9543, 0.5136, 0, -0.97179997, 0.2357, 0, -0.88189995, 0.4714, 0.24149999, -0.9543, 0.5136, 0, -0.97179997, 0.2357, -0.2313, -0.945, 0.2313, 0, -0.88189995, 0.4714, -0.2313, -0.945, 0.2313, -0.2175, -0.8595, 0.4626, 0, -0.88189995, 0.4714, -0.2313, -0.945, 0.2313, -0.4626, -0.8595, 0.2175, -0.2175, -0.8595, 0.4626, -0.4626, -0.8595, 0.2175, -0.4351, -0.7883, 0.4351, -0.2175, -0.8595, 0.4626, -0.4626, -0.8595, 0.2175, -0.7854, -0.7854, 0.21779999, -0.4351, -0.7883, 0.4351, -0.7854, -0.7854, 0.21779999, -0.6526, -0.6526, 0.3849, -0.4351, -0.7883, 0.4351, 0.71919996, -0.71919996, 0, 0.5191, -0.9711, 0, 0.7114, -0.7114, 0.1973, 0.5191, -0.9711, 0, 0.5455, -1.0134, 0.2565, 0.7114, -0.7114, 0.1973, 0.5191, -0.9711, 0, 0.23779999, -0.9805, 0, 0.5455, -1.0134, 0.2565, 0.23779999, -0.9805, 0, 0.2518, -1.0288, 0.2518, 0.5455, -1.0134, 0.2565, 0.23779999, -0.9805, 0, 0, -1, 0, 0.2518, -1.0288, 0.2518, 0, -1, 0, 0, -0.97179997, 0.2357, 0.2518, -1.0288, 0.2518, 0, -1, 0, -0.2357, -0.97179997, 0, 0, -0.97179997, 0.2357, -0.2357, -0.97179997, 0, -0.2313, -0.945, 0.2313, 0, -0.97179997, 0.2357, -0.2357, -0.97179997, 0, -0.4714, -0.88189995, 0, -0.2313, -0.945, 0.2313, -0.4714, -0.88189995, 0, -0.4626, -0.8595, 0.2175, -0.2313, -0.945, 0.2313, -0.4714, -0.88189995, 0, -0.7176, -0.7176, 0, -0.4626, -0.8595, 0.2175, -0.7176, -0.7176, 0, -0.7854, -0.7854, 0.21779999, -0.4626, -0.8595, 0.2175, 0.6951, -0.6951, -0.1928, 0.4815, -0.8946, -0.22639999, 0.71919996, -0.71919996, 0, 0.4815, -0.8946, -0.22639999, 0.5191, -0.9711, 0, 0.71919996, -0.71919996, 0, 0.4815, -0.8946, -0.22639999, 0.24159999, -0.987, -0.24159999, 0.5191, -0.9711, 0, 0.24159999, -0.987, -0.24159999, 0.23779999, -0.9805, 0, 0.5191, -0.9711, 0, 0.24159999, -0.987, -0.24159999, 0, -0.97179997, -0.2357, 0.23779999, -0.9805, 0, 0, -0.97179997, -0.2357, 0, -1, 0, 0.23779999, -0.9805, 0, 0, -0.97179997, -0.2357, -0.2313, -0.945, -0.2313, 0, -1, 0, -0.2313, -0.945, -0.2313, -0.2357, -0.97179997, 0, 0, -1, 0, -0.2313, -0.945, -0.2313, -0.4626, -0.8595, -0.2175, -0.2357, -0.97179997, 0, -0.4626, -0.8595, -0.2175, -0.4714, -0.88189995, 0, -0.2357, -0.97179997, 0, -0.4626, -0.8595, -0.2175, -0.69589996, -0.69589996, -0.19299999, -0.4714, -0.88189995, 0, -0.69589996, -0.69589996, -0.19299999, -0.7176, -0.7176, 0, -0.4714, -0.88189995, 0, 0.77059996, -0.77059996, -0.4545, 0.4531, -0.82089996, -0.4531, 0.6951, -0.6951, -0.1928, 0.4531, -0.82089996, -0.4531, 0.4815, -0.8946, -0.22639999, 0.6951, -0.6951, -0.1928, 0.4531, -0.82089996, -0.4531, 0.2175, -0.8595, -0.4626, 0.4815, -0.8946, -0.22639999, 0.2175, -0.8595, -0.4626, 0.24159999, -0.987, -0.24159999, 0.4815, -0.8946, -0.22639999, 0.2175, -0.8595, -0.4626, 0, -0.88189995, -0.4714, 0.24159999, -0.987, -0.24159999, 0, -0.88189995, -0.4714, 0, -0.97179997, -0.2357, 0.24159999, -0.987, -0.24159999, 0, -0.88189995, -0.4714, -0.2175, -0.8595, -0.4626, 0, -0.97179997, -0.2357, -0.2175, -0.8595, -0.4626, -0.2313, -0.945, -0.2313, 0, -0.97179997, -0.2357, -0.2175, -0.8595, -0.4626, -0.4351, -0.7883, -0.4351, -0.2313, -0.945, -0.2313, -0.4351, -0.7883, -0.4351, -0.4626, -0.8595, -0.2175, -0.2313, -0.945, -0.2313, -0.4351, -0.7883, -0.4351, -0.6526, -0.6526, -0.3849, -0.4626, -0.8595, -0.2175, -0.6526, -0.6526, -0.3849, -0.69589996, -0.69589996, -0.19299999, -0.4626, -0.8595, -0.2175, 0.63, -0.63, -0.63, 0.4062, -0.6888, -0.6888, 0.77059996, -0.77059996, -0.4545, 0.4062, -0.6888, -0.6888, 0.4531, -0.82089996, -0.4531, 0.77059996, -0.77059996, -0.4545, 0.4062, -0.6888, -0.6888, 0.1925, -0.6939, -0.6939, 0.4531, -0.82089996, -0.4531, 0.1925, -0.6939, -0.6939, 0.2175, -0.8595, -0.4626, 0.4531, -0.82089996, -0.4531, 0.1925, -0.6939, -0.6939, 0, -0.7163, -0.7163, 0.2175, -0.8595, -0.4626, 0, -0.7163, -0.7163, 0, -0.88189995, -0.4714, 0.2175, -0.8595, -0.4626, 0, -0.7163, -0.7163, -0.1925, -0.6939, -0.6939, 0, -0.88189995, -0.4714, -0.1925, -0.6939, -0.6939, -0.2175, -0.8595, -0.4626, 0, -0.88189995, -0.4714, -0.1925, -0.6939, -0.6939, -0.3849, -0.6526, -0.6526, -0.2175, -0.8595, -0.4626, -0.3849, -0.6526, -0.6526, -0.4351, -0.7883, -0.4351, -0.2175, -0.8595, -0.4626, -0.3849, -0.6526, -0.6526, -0.5786, -0.5786, -0.5786, -0.4351, -0.7883, -0.4351, -0.5786, -0.5786, -0.5786, -0.6526, -0.6526, -0.3849, -0.4351, -0.7883, -0.4351)

[sub_resource type="Shader" id="Shader_05ywt"]
code = "shader_type spatial;

// use uniforms to pass values between code and shaders
uniform float min_height;
uniform float max_height;
// gradient texture to assign colours to planet regions
uniform sampler2D height_colour;

// variable interpolated between vertices
varying float height;

void vertex() {
	// given the origin of the mesh is the centre of the planet,
	// the height is just the length of the current vertex in local space
	height = length(VERTEX);

}

void fragment() {
	// Called for every pixel the material is visible on.
	// linear interpolation of current height between min and max height
	// gives a value for the current height between 0 and 1
	float t = (height - min_height)/(max_height - min_height);
	
	// sample the height_colour texture - because it's a 1D gradient, always use y=0 and set x = t
	// get rgb to remove any alpha channel
	vec3 colour = texture(height_colour, vec2(t, 0.0)).rgb;
	
	// set colour
	ALBEDO = colour;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_oltg6"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_05ywt")
shader_parameter/min_height = 1.0
shader_parameter/max_height = 1.27799
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="ArrayMesh" id="ArrayMesh_1wsln"]
_surfaces = [{
"aabb": AABB(-1.1462245, -0.78541476, -0.7985735, 0.56887424, 1.5372819, 1.5178099),
"attribute_data": PackedByteArray("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA="),
"format": 34359742487,
"index_count": 216,
"index_data": PackedByteArray("BwAIAAAACAABAAAACAAJAAEACQACAAEACQAKAAIACgADAAIACgALAAMACwAEAAMACwAMAAQADAAFAAQADAANAAUADQAGAAUADgAPAAcADwAIAAcADwAQAAgAEAAJAAgAEAARAAkAEQAKAAkAEQASAAoAEgALAAoAEgATAAsAEwAMAAsAEwAUAAwAFAANAAwAFQAWAA4AFgAPAA4AFgAXAA8AFwAQAA8AFwAYABAAGAARABAAGAAZABEAGQASABEAGQAaABIAGgATABIAGgAbABMAGwAUABMAHAAdABUAHQAWABUAHQAeABYAHgAXABYAHgAfABcAHwAYABcAHwAgABgAIAAZABgAIAAhABkAIQAaABkAIQAiABoAIgAbABoAIwAkABwAJAAdABwAJAAlAB0AJQAeAB0AJQAmAB4AJgAfAB4AJgAnAB8AJwAgAB8AJwAoACAAKAAhACAAKAApACEAKQAiACEAKgArACMAKwAkACMAKwAsACQALAAlACQALAAtACUALQAmACUALQAuACYALgAnACYALgAvACcALwAoACcALwAwACgAMAApACgA"),
"material": SubResource("ShaderMaterial_oltg6"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 49,
"vertex_data": PackedByteArray("Os0TvzrNEz86zRM/wxInv8MSJz+iEcU+sKIxv7CiMT+iEUU+SkI9v0pCPT8AAAAAXXpAv116QD8AiVW+wxInv8MSJz+iEcW+Os0TvzrNEz86zRO/wxInv6IRxT7DEic/S81Jv63D3j6tw94+BAZcv+rY7D6tw14+abKBv96mCj8AAAAAXSeAv+/zCT8OwIG+S81Jv63D3j6tw96+wxInv6IRxT7DEie/sKIxv6IRRT6wojE/BAZcv63DXj7q2Ow+zOpxv+rYbD7q2Gw+kyuIv8EahD4AAAAA3MaPv3/DjD6Bw4y+wMdrv6i3bj4Vz/2+pEJDvzGfWD6kQkO/8wQ1vwAAAADzBDU/UsVhvwAAAADuW/E+d/98vwAAAACrcXU+fLeSvwAAAAAAAAAAt1KHvwAAAABgSIO+9OGCvwAAAABe6wu/ihhIvwAAAACKGEi/4B84v5BETL7gHzg/od9cvwOgX74rw+0++guDv+tMgL7pTIA+lTyNvwsFib4AAAAAGwN8vxK7dr4Su3a+okFwv9Q/c75LUAG/UG9Mv9LMYr5Qb0y/wxInv6IRxb7DEic/GrlOv1ky5L5ZMuQ+7WJ8v6nXB7/Lh38+tFOBv59BCr8AAAAAkodlv4wU976OY2i+f15av3AN8b5wDfG+ziNDv6Ys5r7OI0O/Os0TvzrNE786zRM/wxInv8MSJ7+iEcU+8RBJv/EQSb8ZEF8+drI3v3ayN78AAAAAGCQyvxgkMr80oUW+wxInv8MSJ7+iEcW+0iEUv9IhFL/SIRS/cUw4pheIwKTXRviq6nv5pV5P/66nddWkfUwpw3lQF6u3ManWADrooSYmCs+BRxOj/SP6x+1N9qbXRt6bbZYGqQFDgKEzjU6pkkOHn4KQpalcQHioLH6upzQvVc8fQ0WlKSo22Jc+vp0zKgrQpER5o0I+dY1eonOtFDqTkmGcNK8jOVOW2pcQr5kpO4/2lTO1QBCApIVp7bUdH8/OVEvCoZojc8nSTBWmETVJgpmnqrGaNCiEMqYEst8vt4iBoCa0+A10g0+Kzb3KEsVfc28qyCwAmK6BWfK0oxLUxQFT7qYsPSdvX6+RuP07CHaurWGzICuyeU6kKrseFa1mxncSyiwZok2kYPzH5BvDTEhhickZDldFv1RfuelQfVkPu9/A0lFOX2O6/qmwQFdamYdu1XcxBUXvXT3SayjKOzxU6srKMB07mVQVz2QpxzyHVfTL+0cBXBacCs7rVoVX1L0JkkBNflGdZ6DcK0AVMwlKn9GYOJwu+EcAzaY5uS7uR4TNj0IdJD48Kss=")
}]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_xlnx0"]
data = PackedVector3Array(-0.6526, 0.3849, 0.6526, -0.7883, 0.4351, 0.4351, -0.57739997, 0.57739997, 0.57739997, -0.7883, 0.4351, 0.4351, -0.6526, 0.6526, 0.3849, -0.57739997, 0.57739997, 0.57739997, -0.7883, 0.4351, 0.4351, -0.8595, 0.4626, 0.2175, -0.6526, 0.6526, 0.3849, -0.8595, 0.4626, 0.2175, -0.6939, 0.6939, 0.1925, -0.6526, 0.6526, 0.3849, -0.8595, 0.4626, 0.2175, -1.0133, 0.5416, 0, -0.6939, 0.6939, 0.1925, -1.0133, 0.5416, 0, -0.73929995, 0.73929995, 0, -0.6939, 0.6939, 0.1925, -1.0133, 0.5416, 0, -1.0012, 0.53889996, -0.2534, -0.73929995, 0.73929995, 0, -1.0012, 0.53889996, -0.2534, -0.75189996, 0.75189996, -0.2085, -0.73929995, 0.73929995, 0, -1.0012, 0.53889996, -0.2534, -0.7883, 0.4351, -0.4351, -0.75189996, 0.75189996, -0.2085, -0.7883, 0.4351, -0.4351, -0.6526, 0.6526, -0.3849, -0.75189996, 0.75189996, -0.2085, -0.7883, 0.4351, -0.4351, -0.6526, 0.3849, -0.6526, -0.6526, 0.6526, -0.3849, -0.6526, 0.3849, -0.6526, -0.57739997, 0.57739997, -0.57739997, -0.6526, 0.6526, -0.3849, -0.6939, 0.1925, 0.6939, -0.8595, 0.2175, 0.4626, -0.6526, 0.3849, 0.6526, -0.8595, 0.2175, 0.4626, -0.7883, 0.4351, 0.4351, -0.6526, 0.3849, 0.6526, -0.8595, 0.2175, 0.4626, -0.945, 0.2313, 0.2313, -0.7883, 0.4351, 0.4351, -0.945, 0.2313, 0.2313, -0.8595, 0.4626, 0.2175, -0.7883, 0.4351, 0.4351, -0.945, 0.2313, 0.2313, -1.0638, 0.258, 0, -0.8595, 0.4626, 0.2175, -1.0638, 0.258, 0, -1.0133, 0.5416, 0, -0.8595, 0.4626, 0.2175, -1.0638, 0.258, 0, -1.1233, 0.2749, -0.2749, -1.0133, 0.5416, 0, -1.1233, 0.2749, -0.2749, -1.0012, 0.53889996, -0.2534, -1.0133, 0.5416, 0, -1.1233, 0.2749, -0.2749, -0.921, 0.2331, -0.4957, -1.0012, 0.53889996, -0.2534, -0.921, 0.2331, -0.4957, -0.7883, 0.4351, -0.4351, -1.0012, 0.53889996, -0.2534, -0.921, 0.2331, -0.4957, -0.76269996, 0.21149999, -0.76269996, -0.7883, 0.4351, -0.4351, -0.76269996, 0.21149999, -0.76269996, -0.6526, 0.3849, -0.6526, -0.7883, 0.4351, -0.4351, -0.7071, 0, 0.7071, -0.88189995, 0, 0.4714, -0.6939, 0.1925, 0.6939, -0.88189995, 0, 0.4714, -0.8595, 0.2175, 0.4626, -0.6939, 0.1925, 0.6939, -0.88189995, 0, 0.4714, -0.98829997, 0, 0.23969999, -0.8595, 0.2175, 0.4626, -0.98829997, 0, 0.23969999, -0.945, 0.2313, 0.2313, -0.8595, 0.2175, 0.4626, -0.98829997, 0, 0.23969999, -1.1462, 0, 0, -0.945, 0.2313, 0.2313, -1.1462, 0, 0, -1.0638, 0.258, 0, -0.945, 0.2313, 0.2313, -1.1462, 0, 0, -1.0572, 0, -0.2564, -1.0638, 0.258, 0, -1.0572, 0, -0.2564, -1.1233, 0.2749, -0.2749, -1.0638, 0.258, 0, -1.0572, 0, -0.2564, -1.0224999, 0, -0.5466, -1.1233, 0.2749, -0.2749, -1.0224999, 0, -0.5466, -0.921, 0.2331, -0.4957, -1.1233, 0.2749, -0.2749, -1.0224999, 0, -0.5466, -0.7816, 0, -0.7816, -0.921, 0.2331, -0.4957, -0.7816, 0, -0.7816, -0.76269996, 0.21149999, -0.76269996, -0.921, 0.2331, -0.4957, -0.71919996, -0.1995, 0.71919996, -0.8628, -0.2184, 0.4644, -0.7071, 0, 0.7071, -0.8628, -0.2184, 0.4644, -0.88189995, 0, 0.4714, -0.7071, 0, 0.7071, -0.8628, -0.2184, 0.4644, -1.0238, -0.25059998, 0.25059998, -0.88189995, 0, 0.4714, -1.0238, -0.25059998, 0.25059998, -0.98829997, 0, 0.23969999, -0.88189995, 0, 0.4714, -1.0238, -0.25059998, 0.25059998, -1.1034, -0.2676, 0, -0.98829997, 0, 0.23969999, -1.1034, -0.2676, 0, -1.1462, 0, 0, -0.98829997, 0, 0.23969999, -1.1034, -0.2676, 0, -0.9844, -0.2409, -0.2409, -1.1462, 0, 0, -0.9844, -0.2409, -0.2409, -1.0572, 0, -0.2564, -1.1462, 0, 0, -0.9844, -0.2409, -0.2409, -0.9385, -0.2375, -0.5051, -1.0572, 0, -0.2564, -0.9385, -0.2375, -0.5051, -1.0224999, 0, -0.5466, -1.0572, 0, -0.2564, -0.9385, -0.2375, -0.5051, -0.79859996, -0.2215, -0.79859996, -1.0224999, 0, -0.5466, -0.79859996, -0.2215, -0.79859996, -0.7816, 0, -0.7816, -1.0224999, 0, -0.5466, -0.6526, -0.3849, 0.6526, -0.8075, -0.4457, 0.4457, -0.71919996, -0.1995, 0.71919996, -0.8075, -0.4457, 0.4457, -0.8628, -0.2184, 0.4644, -0.71919996, -0.1995, 0.71919996, -0.8075, -0.4457, 0.4457, -0.9859, -0.5306, 0.24949999, -0.8628, -0.2184, 0.4644, -0.9859, -0.5306, 0.24949999, -1.0238, -0.25059998, 0.25059998, -0.8628, -0.2184, 0.4644, -0.9859, -0.5306, 0.24949999, -1.0103999, -0.5401, 0, -1.0238, -0.25059998, 0.25059998, -1.0103999, -0.5401, 0, -1.1034, -0.2676, 0, -1.0238, -0.25059998, 0.25059998, -1.0103999, -0.5401, 0, -0.89659995, -0.48259997, -0.2269, -1.1034, -0.2676, 0, -0.89659995, -0.48259997, -0.2269, -0.9844, -0.2409, -0.2409, -1.1034, -0.2676, 0, -0.89659995, -0.48259997, -0.2269, -0.853, -0.47079998, -0.47079998, -0.9844, -0.2409, -0.2409, -0.853, -0.47079998, -0.47079998, -0.9385, -0.2375, -0.5051, -0.9844, -0.2409, -0.2409, -0.853, -0.47079998, -0.47079998, -0.76229995, -0.44959998, -0.76229995, -0.9385, -0.2375, -0.5051, -0.76229995, -0.44959998, -0.76229995, -0.79859996, -0.2215, -0.79859996, -0.9385, -0.2375, -0.5051, -0.57739997, -0.57739997, 0.57739997, -0.6526, -0.6526, 0.3849, -0.6526, -0.3849, 0.6526, -0.6526, -0.6526, 0.3849, -0.8075, -0.4457, 0.4457, -0.6526, -0.3849, 0.6526, -0.6526, -0.6526, 0.3849, -0.7854, -0.7854, 0.21779999, -0.8075, -0.4457, 0.4457, -0.7854, -0.7854, 0.21779999, -0.9859, -0.5306, 0.24949999, -0.8075, -0.4457, 0.4457, -0.7854, -0.7854, 0.21779999, -0.7176, -0.7176, 0, -0.9859, -0.5306, 0.24949999, -0.7176, -0.7176, 0, -1.0103999, -0.5401, 0, -0.9859, -0.5306, 0.24949999, -0.7176, -0.7176, 0, -0.69589996, -0.69589996, -0.19299999, -1.0103999, -0.5401, 0, -0.69589996, -0.69589996, -0.19299999, -0.89659995, -0.48259997, -0.2269, -1.0103999, -0.5401, 0, -0.69589996, -0.69589996, -0.19299999, -0.6526, -0.6526, -0.3849, -0.89659995, -0.48259997, -0.2269, -0.6526, -0.6526, -0.3849, -0.853, -0.47079998, -0.47079998, -0.89659995, -0.48259997, -0.2269, -0.6526, -0.6526, -0.3849, -0.5786, -0.5786, -0.5786, -0.853, -0.47079998, -0.47079998, -0.5786, -0.5786, -0.5786, -0.76229995, -0.44959998, -0.76229995, -0.853, -0.47079998, -0.47079998)

[sub_resource type="Shader" id="Shader_hp6s2"]
code = "shader_type spatial;

// use uniforms to pass values between code and shaders
uniform float min_height;
uniform float max_height;
// gradient texture to assign colours to planet regions
uniform sampler2D height_colour;

// variable interpolated between vertices
varying float height;

void vertex() {
	// given the origin of the mesh is the centre of the planet,
	// the height is just the length of the current vertex in local space
	height = length(VERTEX);

}

void fragment() {
	// Called for every pixel the material is visible on.
	// linear interpolation of current height between min and max height
	// gives a value for the current height between 0 and 1
	float t = (height - min_height)/(max_height - min_height);
	
	// sample the height_colour texture - because it's a 1D gradient, always use y=0 and set x = t
	// get rgb to remove any alpha channel
	vec3 colour = texture(height_colour, vec2(t, 0.0)).rgb;
	
	// set colour
	ALBEDO = colour;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_ttgr5"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_hp6s2")
shader_parameter/min_height = 1.0
shader_parameter/max_height = 1.27799
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="ArrayMesh" id="ArrayMesh_gtl15"]
_surfaces = [{
"aabb": AABB(0.5813117, -0.77063483, -0.7177793, 0.44184434, 1.4777416, 1.4929333),
"attribute_data": PackedByteArray
"format": 34359742487,
"index_count": 216,
"index_data": PackedByteArray("BwAIAAAACAABAAAACAAJAAEACQACAAEACQAKAAIACgADAAIACgALAAMACwAEAAMACwAMAAQADAAFAAQADAANAAUADQAGAAUADgAPAAcADwAIAAcADwAQAAgAEAAJAAgAEAARAAkAEQAKAAkAEQASAAoAEgALAAoAEgATAAsAEwAMAAsAEwAUAAwAFAANAAwAFQAWAA4AFgAPAA4AFgAXAA8AFwAQAA8AFwAYABAAGAARABAAGAAZABEAGQASABEAGQAaABIAGgATABIAGgAbABMAGwAUABMAHAAdABUAHQAWABUAHQAeABYAHgAXABYAHgAfABcAHwAYABcAHwAgABgAIAAZABgAIAAhABkAIQAaABkAIQAiABoAIgAbABoAIwAkABwAJAAdABwAJAAlAB0AJQAeAB0AJQAmAB4AJgAfAB4AJgAnAB8AJwAgAB8AJwAoACAAKAAhACAAKAApACEAKQAiACEAKgArACMAKwAkACMAKwAsACQALAAlACQALAAtACUALQAmACUALQAuACYALgAnACYALgAvACcALwAoACcALwAwACgAMAApACgA"),
"material": SubResource("ShaderMaterial_ttgr5"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 49,
"vertex_data": PackedByteArray("g+0cP4PtHD+D7Ry/oGwtP6BsLT9mj8y+sKIxP7CiMT+iEUW+8wQ1P/MENT8AAAAAsKIxP7CiMT+kEUU+wxInP8MSJz+iEcU+In4ZPyJ+GT8ifhk/wxInP6IRxT7DEie/S81JP63D3j6tw96+BAZcP+rY7D6tw16+UsVhP+5b8T4AAAAAObp0P1m4Az+txnc+IGJvP/EfBD/xHwQ/f3BGP/4Q6j5/cEY/sKIxP6IRRT6wojG/ECFhPwHvYz7nV/K+zOpxP+rYbD7q2Gy+fKyAP+2peT4AAAAAGPB9P7ideD68nXg+S+9vP3Pscj75IwE/Q9VDP9tBWT5D1UM/8wQ1PwAAAADzBDW/nZJxPwAAAABEIAG/x/aCPwAAAACAG36+AACAPwAAAAAAAAAAi8l4PwAAAADxW3E+UsVhPwAAAADuW/E+8wQ1PwAAAADzBDU/sRc0P3XLR76xFzS/lQ9yP4kTdb7uSAK/8Qt+P/+4eL78uHi+i8l4P/Fbcb4AAAAAzOpxP+zYbL7s2Gw+BAZcP7DDXr7q2Ow+i90yP/JuRr6L3TI/YsA3P8692L5iwDe/VkhkP+f++77n/vu+BAZcP+rY7L6tw16+UsVhP+5b8b4AAAAABAZcP+rY7L6ww14+S81JP63D3r6tw94+UlkqP77uyL5SWSo/X0UhP19FIb9fRSG/U0hFP1NIRb+ls+i+0PMxP9DzMb+ia0W+th04P7YdOL8AAAAAuR82P7kfNr9iDEo+wxInP8MSJ7+iEcU+2NAUP9jQFL/Y0BQ/duWFv2GpNsTd2Fu94X6V15jNVrs7ZprWg8dpw5JbyddbqtzKyT2v0ACa6coDMZfH9p+rxmY3GcqR56vFr7T4t6nhRL5qm1HL79h2uAN7HNaF14W2jnai1WHVcq4xb1bTNbpsqc9SyMoNqveyBEPkxqjtl8g3s4KtleTXviylVMbA5RitVIzWzNnq+Zt7guDKR+9thld1vMKY0wx1vV+/tJzHoXRMWC6vZ/3Qxl6r56YK9/C17qoDt0v13ZVciuPEDfnHfkV6Qb904Bh3QWkbufTLrXJSWzqxG8DWbGNVuqqL+2w7fKigqH7xNknWnuKwAeVhW7WBh7Gk3qRowXAxtKLV0WqeZk6zv8jJbktaY68oxNp0uFY7rUTqEzUynUOnnuQmTmqMrq+a0u9PSGyYrFDRilOIaSWtyccmW4tdEK0ZvrVdjlPZqTS8CGSTUqSo0tnfIICGwJye20RAbYYnqSLJNFbEX8Cs6M5WSKhpPqvrxHJUElvRq4S5W1dmTjqo/bTUVxBK8aU=")
}]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_oxaqy"]
data = PackedVector3Array(0.6526, 0.3849, -0.6526, 0.7883, 0.4351, -0.4351, 0.613, 0.613, -0.613, 0.7883, 0.4351, -0.4351, 0.6774, 0.6774, -0.39949998, 0.613, 0.613, -0.613, 0.7883, 0.4351, -0.4351, 0.8595, 0.4626, -0.2175, 0.6774, 0.6774, -0.39949998, 0.8595, 0.4626, -0.2175, 0.6939, 0.6939, -0.1925, 0.6774, 0.6774, -0.39949998, 0.8595, 0.4626, -0.2175, 0.88189995, 0.4714, 0, 0.6939, 0.6939, -0.1925, 0.88189995, 0.4714, 0, 0.7071, 0.7071, 0, 0.6939, 0.6939, -0.1925, 0.88189995, 0.4714, 0, 0.956, 0.51449996, 0.242, 0.7071, 0.7071, 0, 0.956, 0.51449996, 0.242, 0.6939, 0.6939, 0.1925, 0.7071, 0.7071, 0, 0.956, 0.51449996, 0.242, 0.93509996, 0.5161, 0.5161, 0.6939, 0.6939, 0.1925, 0.93509996, 0.5161, 0.5161, 0.6526, 0.6526, 0.3849, 0.6939, 0.6939, 0.1925, 0.93509996, 0.5161, 0.5161, 0.7752, 0.4572, 0.7752, 0.6526, 0.6526, 0.3849, 0.7752, 0.4572, 0.7752, 0.59959996, 0.59959996, 0.59959996, 0.6526, 0.6526, 0.3849, 0.6939, 0.1925, -0.6939, 0.87939996, 0.2226, -0.47329998, 0.6526, 0.3849, -0.6526, 0.87939996, 0.2226, -0.47329998, 0.7883, 0.4351, -0.4351, 0.6526, 0.3849, -0.6526, 0.87939996, 0.2226, -0.47329998, 0.945, 0.2313, -0.2313, 0.7883, 0.4351, -0.4351, 0.945, 0.2313, -0.2313, 0.8595, 0.4626, -0.2175, 0.7883, 0.4351, -0.4351, 0.945, 0.2313, -0.2313, 1.0052999, 0.2438, 0, 0.8595, 0.4626, -0.2175, 1.0052999, 0.2438, 0, 0.88189995, 0.4714, 0, 0.8595, 0.4626, -0.2175, 1.0052999, 0.2438, 0, 0.99189997, 0.2428, 0.2428, 0.88189995, 0.4714, 0, 0.99189997, 0.2428, 0.2428, 0.956, 0.51449996, 0.242, 0.88189995, 0.4714, 0, 0.99189997, 0.2428, 0.2428, 0.93719995, 0.23719999, 0.5045, 0.956, 0.51449996, 0.242, 0.93719995, 0.23719999, 0.5045, 0.93509996, 0.5161, 0.5161, 0.956, 0.51449996, 0.242, 0.93719995, 0.23719999, 0.5045, 0.765, 0.2122, 0.765, 0.93509996, 0.5161, 0.5161, 0.765, 0.2122, 0.765, 0.7752, 0.4572, 0.7752, 0.93509996, 0.5161, 0.5161, 0.7071, 0, -0.7071, 0.9436, 0, -0.5044, 0.6939, 0.1925, -0.6939, 0.9436, 0, -0.5044, 0.87939996, 0.2226, -0.47329998, 0.6939, 0.1925, -0.6939, 0.9436, 0, -0.5044, 1.0231999, 0, -0.2482, 0.87939996, 0.2226, -0.47329998, 1.0231999, 0, -0.2482, 0.945, 0.2313, -0.2313, 0.87939996, 0.2226, -0.47329998, 1.0231999, 0, -0.2482, 1, 0, 0, 0.945, 0.2313, -0.2313, 1, 0, 0, 1.0052999, 0.2438, 0, 0.945, 0.2313, -0.2313, 1, 0, 0, 0.97179997, 0, 0.2357, 1.0052999, 0.2438, 0, 0.97179997, 0, 0.2357, 0.99189997, 0.2428, 0.2428, 1.0052999, 0.2438, 0, 0.97179997, 0, 0.2357, 0.88189995, 0, 0.4714, 0.99189997, 0.2428, 0.2428, 0.88189995, 0, 0.4714, 0.93719995, 0.23719999, 0.5045, 0.99189997, 0.2428, 0.2428, 0.88189995, 0, 0.4714, 0.7071, 0, 0.7071, 0.93719995, 0.23719999, 0.5045, 0.7071, 0, 0.7071, 0.765, 0.2122, 0.765, 0.93719995, 0.23719999, 0.5045, 0.7035, -0.1951, -0.7035, 0.9456, -0.2393, -0.5089, 0.7071, 0, -0.7071, 0.9456, -0.2393, -0.5089, 0.9436, 0, -0.5044, 0.7071, 0, -0.7071, 0.9456, -0.2393, -0.5089, 0.9924, -0.2429, -0.2429, 0.9436, 0, -0.5044, 0.9924, -0.2429, -0.2429, 1.0231999, 0, -0.2482, 0.9436, 0, -0.5044, 0.9924, -0.2429, -0.2429, 0.97179997, -0.2357, 0, 1.0231999, 0, -0.2482, 0.97179997, -0.2357, 0, 1, 0, 0, 1.0231999, 0, -0.2482, 0.97179997, -0.2357, 0, 0.945, -0.2313, 0.2313, 1, 0, 0, 0.945, -0.2313, 0.2313, 0.97179997, 0, 0.2357, 1, 0, 0, 0.945, -0.2313, 0.2313, 0.8595, -0.2175, 0.4626, 0.97179997, 0, 0.2357, 0.8595, -0.2175, 0.4626, 0.88189995, 0, 0.4714, 0.97179997, 0, 0.2357, 0.8595, -0.2175, 0.4626, 0.6987, -0.1938, 0.6987, 0.88189995, 0, 0.4714, 0.6987, -0.1938, 0.6987, 0.7071, 0, 0.7071, 0.88189995, 0, 0.4714, 0.71779996, -0.4233, -0.71779996, 0.89169997, -0.4922, -0.4922, 0.7035, -0.1951, -0.7035, 0.89169997, -0.4922, -0.4922, 0.9456, -0.2393, -0.5089, 0.7035, -0.1951, -0.7035, 0.89169997, -0.4922, -0.4922, 0.8595, -0.4626, -0.2175, 0.9456, -0.2393, -0.5089, 0.8595, -0.4626, -0.2175, 0.9924, -0.2429, -0.2429, 0.9456, -0.2393, -0.5089, 0.8595, -0.4626, -0.2175, 0.88189995, -0.4714, 0, 0.9924, -0.2429, -0.2429, 0.88189995, -0.4714, 0, 0.97179997, -0.2357, 0, 0.9924, -0.2429, -0.2429, 0.88189995, -0.4714, 0, 0.8595, -0.4626, 0.2175, 0.97179997, -0.2357, 0, 0.8595, -0.4626, 0.2175, 0.945, -0.2313, 0.2313, 0.97179997, -0.2357, 0, 0.8595, -0.4626, 0.2175, 0.7883, -0.4351, 0.4351, 0.945, -0.2313, 0.2313, 0.7883, -0.4351, 0.4351, 0.8595, -0.2175, 0.4626, 0.945, -0.2313, 0.2313, 0.7883, -0.4351, 0.4351, 0.66539997, -0.3924, 0.66539997, 0.8595, -0.2175, 0.4626, 0.66539997, -0.3924, 0.66539997, 0.6987, -0.1938, 0.6987, 0.8595, -0.2175, 0.4626, 0.63, -0.63, -0.63, 0.77059996, -0.77059996, -0.4545, 0.71779996, -0.4233, -0.71779996, 0.77059996, -0.77059996, -0.4545, 0.89169997, -0.4922, -0.4922, 0.71779996, -0.4233, -0.71779996, 0.77059996, -0.77059996, -0.4545, 0.6951, -0.6951, -0.1928, 0.89169997, -0.4922, -0.4922, 0.6951, -0.6951, -0.1928, 0.8595, -0.4626, -0.2175, 0.89169997, -0.4922, -0.4922, 0.6951, -0.6951, -0.1928, 0.71919996, -0.71919996, 0, 0.8595, -0.4626, -0.2175, 0.71919996, -0.71919996, 0, 0.88189995, -0.4714, 0, 0.8595, -0.4626, -0.2175, 0.71919996, -0.71919996, 0, 0.7114, -0.7114, 0.1973, 0.88189995, -0.4714, 0, 0.7114, -0.7114, 0.1973, 0.8595, -0.4626, 0.2175, 0.88189995, -0.4714, 0, 0.7114, -0.7114, 0.1973, 0.6526, -0.6526, 0.3849, 0.8595, -0.4626, 0.2175, 0.6526, -0.6526, 0.3849, 0.7883, -0.4351, 0.4351, 0.8595, -0.4626, 0.2175, 0.6526, -0.6526, 0.3849, 0.58129996, -0.58129996, 0.58129996, 0.7883, -0.4351, 0.4351, 0.58129996, -0.58129996, 0.58129996, 0.66539997, -0.3924, 0.66539997, 0.7883, -0.4351, 0.4351)

[sub_resource type="Shader" id="Shader_18jkp"]
code = "shader_type spatial;

// use uniforms to pass values between code and shaders
uniform float min_height;
uniform float max_height;
// gradient texture to assign colours to planet regions
uniform sampler2D height_colour;

// variable interpolated between vertices
varying float height;

void vertex() {
	// given the origin of the mesh is the centre of the planet,
	// the height is just the length of the current vertex in local space
	height = length(VERTEX);

}

void fragment() {
	// Called for every pixel the material is visible on.
	// linear interpolation of current height between min and max height
	// gives a value for the current height between 0 and 1
	float t = (height - min_height)/(max_height - min_height);
	
	// sample the height_colour texture - because it's a 1D gradient, always use y=0 and set x = t
	// get rgb to remove any alpha channel
	vec3 colour = texture(height_colour, vec2(t, 0.0)).rgb;
	
	// set colour
	ALBEDO = colour;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_rmqb1"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_18jkp")
shader_parameter/min_height = 1.0
shader_parameter/max_height = 1.27799
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="ArrayMesh" id="ArrayMesh_6mxh2"]
_surfaces = [{
"aabb": AABB(-0.7985735, -0.716306, -1.227105, 1.5163528, 1.4425185, 0.64975476),
"attribute_data": PackedByteArray
"format": 34359742487,
"index_count": 216,
"index_data": PackedByteArray("BwAIAAAACAABAAAACAAJAAEACQACAAEACQAKAAIACgADAAIACgALAAMACwAEAAMACwAMAAQADAAFAAQADAANAAUADQAGAAUADgAPAAcADwAIAAcADwAQAAgAEAAJAAgAEAARAAkAEQAKAAkAEQASAAoAEgALAAoAEgATAAsAEwAMAAsAEwAUAAwAFAANAAwAFQAWAA4AFgAPAA4AFgAXAA8AFwAQAA8AFwAYABAAGAARABAAGAAZABEAGQASABEAGQAaABIAGgATABIAGgAbABMAGwAUABMAHAAdABUAHQAWABUAHQAeABYAHgAXABYAHgAfABcAHwAYABcAHwAgABgAIAAZABgAIAAhABkAIQAaABkAIQAiABoAIgAbABoAIwAkABwAJAAdABwAJAAlAB0AJQAeAB0AJQAmAB4AJgAfAB4AJgAnAB8AJwAgAB8AJwAoACAAKAAhACAAKAApACEAKQAiACEAKgArACMAKwAkACMAKwAsACQALAAlACQALAAtACUALQAmACUALQAuACYALgAnACYALgAvACcALwAoACcALwAwACgAMAApACgA"),
"material": SubResource("ShaderMaterial_rmqb1"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 49,
"vertex_data": PackedByteArray("g+0cP4PtHD+D7Ry/wxInP6IRxT7DEie/sKIxP6IRRT6wojG/8wQ1PwAAAADzBDW/sRc0P3XLR76xFzS/YsA3P8692L5iwDe/X0UhP19FIb9fRSG/tknbPhHpOT8R6Tm/rcPePq3D3j5LzUm/6tjsPq3DXj4EBly/7lvxPgAAAABSxWG/WiQGP/ZUfL4oOnm/oInzPqCJ877Rnly/LvrPPkJSML9CUjC/ljlKPntINj97SDa/rcNePurY7D4EBly/6thsPurYbD7M6nG/j2qJPgAAAAA7pY2/cB6NPnIejb6/I5C/AIl0Pkr/Ab/EhnG/ohFFPrCiMb+wojG/AAAAANNoNz/TaDe/AAAAAO5b8T5SxWG/AAAAAO5bcT6LyXi/AAAAAAAAAAAOsI+/AAAAADhhmL7HEZ2/AAAAAK3PAb/G2nK/AAAAANRfN7/UXze/pBFFvrCiMT+wojG/sMNevurY7D4EBly/CcVtvgbFbT7223K/1Ih4vgAAAAB7F4C/mQyFvpkMhb6u5Ye/sMNevurY7L4EBly/pBFFvrCiMb+wojG/ohHFvsMSJz/DEie/rcPevq3D3j5LzUm/6tjsvq3DXj4EBly/7lvxvgAAAABSxWG/6tjsvrDDXr4EBly/rcPevq3D3r5LzUm/ohHFvsMSJ7/DEie/Os0TvzrNEz86zRO/wxInv6IRxT7DEie/pEJDvzGfWD6kQkO/ihhIvwAAAACKGEi/UG9Mv9LMYr5Qb0y/ziNDv6Ys5r7OI0O/0iEUv9IhFL/SIRS/MO9H0YWwB6LE6ajTy7I8oIjyM89Qr1mjW/EnyVmxZar8878+AqTIqyjiXyXOkkGf0tmhGnWDoZmZ5f7myar2iTDqz9ryrbSVcuj11TyyuZxk79rNnbEYprr0BTaFpI+mddgvIwyFq51+0JYYnXJsn7nPfv5SQMOL8N2H8gRZj4Cg2M/u+03Wggjnzt9Org6Q8+cGJESX4Z0jyWASlWSTpLXBlg4YWJOpnDET+Zs6449LK/P+ZkfxibklqvoiTKCJuiPO7mhHqY7YHckMH2rkmTc+uQcvTQCviLpdANFNMa6WLV3r/DlulOcmpux0Qu6QSRii6ftS9I1GEyfbSFSmlX0Nki9zVk6oPjFFHIxEE7fvMOoWjUuIseInhd7ZPt6Y7CYw4s8/Z5aXE4zj01VpkOkEa98iYDyTkQwjIsVe/5z1LCoYUE8srwUrqhvLTbOw/SMB3AhDCJkzKifasj12nNId4uHMSZqT9gkh4ydgmY8EBzEW+mnVkOIpvAfFZa2fODvBELdEZLQ=")
}]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_k43qs"]
data = PackedVector3Array(0.4283, 0.7262, -0.7262, 0.4351, 0.4351, -0.7883, 0.613, 0.613, -0.613, 0.4351, 0.4351, -0.7883, 0.6526, 0.3849, -0.6526, 0.613, 0.613, -0.613, 0.4351, 0.4351, -0.7883, 0.4626, 0.2175, -0.8595, 0.6526, 0.3849, -0.6526, 0.4626, 0.2175, -0.8595, 0.6939, 0.1925, -0.6939, 0.6526, 0.3849, -0.6526, 0.4626, 0.2175, -0.8595, 0.4714, 0, -0.88189995, 0.6939, 0.1925, -0.6939, 0.4714, 0, -0.88189995, 0.7071, 0, -0.7071, 0.6939, 0.1925, -0.6939, 0.4714, 0, -0.88189995, 0.524, -0.2464, -0.97349995, 0.7071, 0, -0.7071, 0.524, -0.2464, -0.97349995, 0.7035, -0.1951, -0.7035, 0.7071, 0, -0.7071, 0.524, -0.2464, -0.97349995, 0.4757, -0.4757, -0.86179996, 0.7035, -0.1951, -0.7035, 0.4757, -0.4757, -0.86179996, 0.71779996, -0.4233, -0.71779996, 0.7035, -0.1951, -0.7035, 0.4757, -0.4757, -0.86179996, 0.4062, -0.6888, -0.6888, 0.71779996, -0.4233, -0.71779996, 0.4062, -0.6888, -0.6888, 0.63, -0.63, -0.63, 0.71779996, -0.4233, -0.71779996, 0.19749999, 0.71199995, -0.71199995, 0.2175, 0.4626, -0.8595, 0.4283, 0.7262, -0.7262, 0.2175, 0.4626, -0.8595, 0.4351, 0.4351, -0.7883, 0.4283, 0.7262, -0.7262, 0.2175, 0.4626, -0.8595, 0.2313, 0.2313, -0.945, 0.4351, 0.4351, -0.7883, 0.2313, 0.2313, -0.945, 0.4626, 0.2175, -0.8595, 0.4351, 0.4351, -0.7883, 0.2313, 0.2313, -0.945, 0.26839998, 0, -1.1065999, 0.4626, 0.2175, -0.8595, 0.26839998, 0, -1.1065999, 0.4714, 0, -0.88189995, 0.4626, 0.2175, -0.8595, 0.26839998, 0, -1.1065999, 0.2756, -0.2756, -1.1261, 0.4714, 0, -0.88189995, 0.2756, -0.2756, -1.1261, 0.524, -0.2464, -0.97349995, 0.4714, 0, -0.88189995, 0.2756, -0.2756, -1.1261, 0.23879999, -0.5078, -0.9435, 0.524, -0.2464, -0.97349995, 0.23879999, -0.5078, -0.9435, 0.4757, -0.4757, -0.86179996, 0.524, -0.2464, -0.97349995, 0.23879999, -0.5078, -0.9435, 0.1925, -0.6939, -0.6939, 0.4757, -0.4757, -0.86179996, 0.1925, -0.6939, -0.6939, 0.4062, -0.6888, -0.6888, 0.4757, -0.4757, -0.86179996, 0, 0.71639997, -0.71639997, 0, 0.4714, -0.88189995, 0.19749999, 0.71199995, -0.71199995, 0, 0.4714, -0.88189995, 0.2175, 0.4626, -0.8595, 0.19749999, 0.71199995, -0.71199995, 0, 0.4714, -0.88189995, 0, 0.2357, -0.97179997, 0.2175, 0.4626, -0.8595, 0, 0.2357, -0.97179997, 0.2313, 0.2313, -0.945, 0.2175, 0.4626, -0.8595, 0, 0.2357, -0.97179997, 0, 0, -1.1226, 0.2313, 0.2313, -0.945, 0, 0, -1.1226, 0.26839998, 0, -1.1065999, 0.2313, 0.2313, -0.945, 0, 0, -1.1226, 0, -0.2976, -1.2271, 0.26839998, 0, -1.1065999, 0, -0.2976, -1.2271, 0.2756, -0.2756, -1.1261, 0.26839998, 0, -1.1065999, 0, -0.2976, -1.2271, 0, -0.5071, -0.94869995, 0.2756, -0.2756, -1.1261, 0, -0.5071, -0.94869995, 0.23879999, -0.5078, -0.9435, 0.2756, -0.2756, -1.1261, 0, -0.5071, -0.94869995, 0, -0.7163, -0.7163, 0.23879999, -0.5078, -0.9435, 0, -0.7163, -0.7163, 0.1925, -0.6939, -0.6939, 0.23879999, -0.5078, -0.9435, -0.1925, 0.6939, -0.6939, -0.2175, 0.4626, -0.8595, 0, 0.71639997, -0.71639997, -0.2175, 0.4626, -0.8595, 0, 0.4714, -0.88189995, 0, 0.71639997, -0.71639997, -0.2175, 0.4626, -0.8595, -0.2322, 0.2322, -0.94869995, 0, 0.4714, -0.88189995, -0.2322, 0.2322, -0.94869995, 0, 0.2357, -0.97179997, 0, 0.4714, -0.88189995, -0.2322, 0.2322, -0.94869995, -0.2427, 0, -1.0007, 0, 0.2357, -0.97179997, -0.2427, 0, -1.0007, 0, 0, -1.1226, 0, 0.2357, -0.97179997, -0.2427, 0, -1.0007, -0.2599, -0.2599, -1.0617, 0, 0, -1.1226, -0.2599, -0.2599, -1.0617, 0, -0.2976, -1.2271, 0, 0, -1.1226, -0.2599, -0.2599, -1.0617, -0.2175, -0.4626, -0.8595, 0, -0.2976, -1.2271, -0.2175, -0.4626, -0.8595, 0, -0.5071, -0.94869995, 0, -0.2976, -1.2271, -0.2175, -0.4626, -0.8595, -0.1925, -0.6939, -0.6939, 0, -0.5071, -0.94869995, -0.1925, -0.6939, -0.6939, 0, -0.7163, -0.7163, 0, -0.5071, -0.94869995, -0.3849, 0.6526, -0.6526, -0.4351, 0.4351, -0.7883, -0.1925, 0.6939, -0.6939, -0.4351, 0.4351, -0.7883, -0.2175, 0.4626, -0.8595, -0.1925, 0.6939, -0.6939, -0.4351, 0.4351, -0.7883, -0.4626, 0.2175, -0.8595, -0.2175, 0.4626, -0.8595, -0.4626, 0.2175, -0.8595, -0.2322, 0.2322, -0.94869995, -0.2175, 0.4626, -0.8595, -0.4626, 0.2175, -0.8595, -0.4714, 0, -0.88189995, -0.2322, 0.2322, -0.94869995, -0.4714, 0, -0.88189995, -0.2427, 0, -1.0007, -0.2322, 0.2322, -0.94869995, -0.4714, 0, -0.88189995, -0.4626, -0.2175, -0.8595, -0.2427, 0, -1.0007, -0.4626, -0.2175, -0.8595, -0.2599, -0.2599, -1.0617, -0.2427, 0, -1.0007, -0.4626, -0.2175, -0.8595, -0.4351, -0.4351, -0.7883, -0.2599, -0.2599, -1.0617, -0.4351, -0.4351, -0.7883, -0.2175, -0.4626, -0.8595, -0.2599, -0.2599, -1.0617, -0.4351, -0.4351, -0.7883, -0.3849, -0.6526, -0.6526, -0.2175, -0.4626, -0.8595, -0.3849, -0.6526, -0.6526, -0.1925, -0.6939, -0.6939, -0.2175, -0.4626, -0.8595, -0.57739997, 0.57739997, -0.57739997, -0.6526, 0.3849, -0.6526, -0.3849, 0.6526, -0.6526, -0.6526, 0.3849, -0.6526, -0.4351, 0.4351, -0.7883, -0.3849, 0.6526, -0.6526, -0.6526, 0.3849, -0.6526, -0.76269996, 0.21149999, -0.76269996, -0.4351, 0.4351, -0.7883, -0.76269996, 0.21149999, -0.76269996, -0.4626, 0.2175, -0.8595, -0.4351, 0.4351, -0.7883, -0.76269996, 0.21149999, -0.76269996, -0.7816, 0, -0.7816, -0.4626, 0.2175, -0.8595, -0.7816, 0, -0.7816, -0.4714, 0, -0.88189995, -0.4626, 0.2175, -0.8595, -0.7816, 0, -0.7816, -0.79859996, -0.2215, -0.79859996, -0.4714, 0, -0.88189995, -0.79859996, -0.2215, -0.79859996, -0.4626, -0.2175, -0.8595, -0.4714, 0, -0.88189995, -0.79859996, -0.2215, -0.79859996, -0.76229995, -0.44959998, -0.76229995, -0.4626, -0.2175, -0.8595, -0.76229995, -0.44959998, -0.76229995, -0.4351, -0.4351, -0.7883, -0.4626, -0.2175, -0.8595, -0.76229995, -0.44959998, -0.76229995, -0.5786, -0.5786, -0.5786, -0.4351, -0.4351, -0.7883, -0.5786, -0.5786, -0.5786, -0.3849, -0.6526, -0.6526, -0.4351, -0.4351, -0.7883)

[sub_resource type="Shader" id="Shader_gbjep"]
code = "shader_type spatial;

// use uniforms to pass values between code and shaders
uniform float min_height;
uniform float max_height;
// gradient texture to assign colours to planet regions
uniform sampler2D height_colour;

// variable interpolated between vertices
varying float height;

void vertex() {
	// given the origin of the mesh is the centre of the planet,
	// the height is just the length of the current vertex in local space
	height = length(VERTEX);

}

void fragment() {
	// Called for every pixel the material is visible on.
	// linear interpolation of current height between min and max height
	// gives a value for the current height between 0 and 1
	float t = (height - min_height)/(max_height - min_height);
	
	// sample the height_colour texture - because it's a 1D gradient, always use y=0 and set x = t
	// get rgb to remove any alpha channel
	vec3 colour = texture(height_colour, vec2(t, 0.0)).rgb;
	
	// set colour
	ALBEDO = colour;
}

//void light() {
	// Called for every pixel for every light affecting the material.
	// Uncomment to replace the default light processing function with this one.
//}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_cdojd"]
resource_local_to_scene = true
render_priority = 0
shader = SubResource("Shader_gbjep")
shader_parameter/min_height = 1.0
shader_parameter/max_height = 1.27799
shader_parameter/height_colour = ExtResource("2_k0a6c")

[sub_resource type="ArrayMesh" id="ArrayMesh_ko8lj"]
_surfaces = [{
"aabb": AABB(-0.7192364, -0.7286819, 0.57735026, 1.4943905, 1.4357886, 0.53343403),
"attribute_data": PackedByteArray
"format": 34359742487,
"index_count": 216,
"index_data": PackedByteArray("BwAIAAAACAABAAAACAAJAAEACQACAAEACQAKAAIACgADAAIACgALAAMACwAEAAMACwAMAAQADAAFAAQADAANAAUADQAGAAUADgAPAAcADwAIAAcADwAQAAgAEAAJAAgAEAARAAkAEQAKAAkAEQASAAoAEgALAAoAEgATAAsAEwAMAAsAEwAUAAwAFAANAAwAFQAWAA4AFgAPAA4AFgAXAA8AFwAQAA8AFwAYABAAGAARABAAGAAZABEAGQASABEAGQAaABIAGgATABIAGgAbABMAGwAUABMAHAAdABUAHQAWABUAHQAeABYAHgAXABYAHgAfABcAHwAYABcAHwAgABgAIAAZABgAIAAhABkAIQAaABkAIQAiABoAIgAbABoAIwAkABwAJAAdABwAJAAlAB0AJQAeAB0AJQAmAB4AJgAfAB4AJgAnAB8AJwAgAB8AJwAoACAAKAAhACAAKAApACEAKQAiACEAKgArACMAKwAkACMAKwAsACQALAAlACQALAAtACUALQAmACUALQAuACYALgAnACYALgAvACcALwAoACcALwAwACgAMAApACgA"),
"material": SubResource("ShaderMaterial_cdojd"),
"primitive": 3,
"uv_scale": Vector4(0, 0, 0, 0),
"vertex_count": 49,
"vertex_data": PackedByteArray("2NAUP9jQFL/Y0BQ/UlkqP77uyL5SWSo/i90yP/BuRr6L3TI/8wQ1PwAAAADzBDU/QdVDP9xBWT5B1UM/f3BGP/4Q6j5/cEY/In4ZPyJ+GT8ifhk/mQjcPuaKOr/mijo/JCziPiQs4r6o40w/Lkn3Pg2VaL53uGU/aOP4PgAAAABP0Gg/6tjsPrDDXj4EBlw/vbffPr233z5kqko/ohHFPsMSJz/DEic/k55KPoKjNr+CozY/rcNePurY7L4EBlw/TqaCPk6mgr4+coU/a++JPgAAAAAuLo4/6thsPu3YbD7M6nE/NOhlPgpx9D4LFGM/ohFFPrCiMT+wojE/AAAAAMNuNr/DbjY/AAAAAKy88r5ID2M/AAAAAJxedL7x43s/AAAAAAAAAAAAAIA/AAAAAPFbcT6LyXg/AAAAAO5b8T5SxWE/AAAAAPMENT/zBDU/pBFFvrCiMb+wojE/sMNevurY7L4EBlw/7dhsvurYbL7M6nE/8VtxvgAAAACLyXg/7NhsvuzYbD7M6nE/sMNevurY7D4EBlw/2HtFvmsCMj9rAjI/ohHFvsMSJ7/DEic/rcPevq3D3r5LzUk/6tjsvq3DXr4EBlw/7lvxvgAAAABSxWE/6tjsvrDDXj4EBlw/rcPevq3D3j5LzUk/amPHvioKKT8qCik/Os0TvzrNE786zRM/wxInv6IRxb7DEic/4B84v45ETL7gHzg/8wQ1vwAAAADzBDU/sKIxv6QRRT6wojE/wxInv6IRxT7DEic/Os0TvzrNEz86zRM/eLNKZV5OzKI0rLZhQUqZnWq5knaHVCem+rDkev1W3p8EljZ+M2pQjJ2JI6hMZZufXJmrxpkxM8WNnHFkvEwekr2lqV/wRg2Z/LDYbHVRHKDts5iN2VTiq2ijO45MXSefupNdoTNgnqEzjoK2Hk9wrhCBEU8yP8CM4IZKU1hBao2vh/5ZEUrhimGWH443aGCVoZa8oLZdYaMBkkensVwXpdWVxbG/S0CxFnhATQg5HY1gff5TjkZXiUhztGRsoWOC7GbTfmKYoI6Cd6Oe4H0ekSF8taqfbyKbJn8wuGpfQ6X1azRSaTy5iIRsDll9T5GB/mh+aualJIoDZrKAqJjSj9FqLZVQj1iUrG6mppF8MpfscwGxxmvWn4ZeHVhSuCuFbl8AXO21CYqyWoBvSaqQlodSon86pomd41jPkaKckp7gXYGgoY6anehjM6k1f4KaAVwBXC64C47lWC5bcLqbkqlW02z6roKbRU28gcCn6qEzT3WNXqK6owZV3pttli6iLFiepPqKRKA=")
}]

[sub_resource type="ConcavePolygonShape3D" id="ConcavePolygonShape3D_yrptl"]
data = PackedVector3Array(0.4298, -0.7287, 0.7287, 0.44169998, -0.44169998, 0.8003, 0.58129996, -0.58129996, 0.58129996, 0.44169998, -0.44169998, 0.8003, 0.66539997, -0.3924, 0.66539997, 0.58129996, -0.58129996, 0.58129996, 0.44169998, -0.44169998, 0.8003, 0.48299998, -0.2271, 0.8973, 0.66539997, -0.3924, 0.66539997, 0.48299998, -0.2271, 0.8973, 0.6987, -0.1938, 0.6987, 0.66539997, -0.3924, 0.66539997, 0.48299998, -0.2271, 0.8973, 0.4861, 0, 0.9094, 0.6987, -0.1938, 0.6987, 0.4861, 0, 0.9094, 0.7071, 0, 0.7071, 0.6987, -0.1938, 0.6987, 0.4861, 0, 0.9094, 0.4626, 0.2175, 0.8595, 0.7071, 0, 0.7071, 0.4626, 0.2175, 0.8595, 0.765, 0.2122, 0.765, 0.7071, 0, 0.7071, 0.4626, 0.2175, 0.8595, 0.4369, 0.4369, 0.7917, 0.765, 0.2122, 0.765, 0.4369, 0.4369, 0.7917, 0.7752, 0.4572, 0.7752, 0.765, 0.2122, 0.765, 0.4369, 0.4369, 0.7917, 0.3849, 0.6526, 0.6526, 0.7752, 0.4572, 0.7752, 0.3849, 0.6526, 0.6526, 0.59959996, 0.59959996, 0.59959996, 0.7752, 0.4572, 0.7752, 0.1979, -0.7134, 0.7134, 0.2175, -0.4626, 0.8595, 0.4298, -0.7287, 0.7287, 0.2175, -0.4626, 0.8595, 0.44169998, -0.44169998, 0.8003, 0.4298, -0.7287, 0.7287, 0.2175, -0.4626, 0.8595, 0.2552, -0.2552, 1.0425, 0.44169998, -0.44169998, 0.8003, 0.2552, -0.2552, 1.0425, 0.48299998, -0.2271, 0.8973, 0.44169998, -0.44169998, 0.8003, 0.2552, -0.2552, 1.0425, 0.2694, 0, 1.1108, 0.48299998, -0.2271, 0.8973, 0.2694, 0, 1.1108, 0.4861, 0, 0.9094, 0.48299998, -0.2271, 0.8973, 0.2694, 0, 1.1108, 0.2313, 0.2313, 0.945, 0.4861, 0, 0.9094, 0.2313, 0.2313, 0.945, 0.4626, 0.2175, 0.8595, 0.4861, 0, 0.9094, 0.2313, 0.2313, 0.945, 0.2245, 0.47739998, 0.88699996, 0.4626, 0.2175, 0.8595, 0.2245, 0.47739998, 0.88699996, 0.4369, 0.4369, 0.7917, 0.4626, 0.2175, 0.8595, 0.2245, 0.47739998, 0.88699996, 0.1925, 0.6939, 0.6939, 0.4369, 0.4369, 0.7917, 0.1925, 0.6939, 0.6939, 0.3849, 0.6526, 0.6526, 0.4369, 0.4369, 0.7917, 0, -0.7126, 0.7126, 0, -0.4741, 0.88699996, 0.1979, -0.7134, 0.7134, 0, -0.4741, 0.88699996, 0.2175, -0.4626, 0.8595, 0.1979, -0.7134, 0.7134, 0, -0.4741, 0.88699996, 0, -0.2386, 0.98389995, 0.2175, -0.4626, 0.8595, 0, -0.2386, 0.98389995, 0.2552, -0.2552, 1.0425, 0.2175, -0.4626, 0.8595, 0, -0.2386, 0.98389995, 0, 0, 1, 0.2552, -0.2552, 1.0425, 0, 0, 1, 0.2694, 0, 1.1108, 0.2552, -0.2552, 1.0425, 0, 0, 1, 0, 0.2357, 0.97179997, 0.2694, 0, 1.1108, 0, 0.2357, 0.97179997, 0.2313, 0.2313, 0.945, 0.2694, 0, 1.1108, 0, 0.2357, 0.97179997, 0, 0.4714, 0.88189995, 0.2313, 0.2313, 0.945, 0, 0.4714, 0.88189995, 0.2245, 0.47739998, 0.88699996, 0.2313, 0.2313, 0.945, 0, 0.4714, 0.88189995, 0, 0.7071, 0.7071, 0.2245, 0.47739998, 0.88699996, 0, 0.7071, 0.7071, 0.1925, 0.6939, 0.6939, 0.2245, 0.47739998, 0.88699996, -0.1925, -0.6939, 0.6939, -0.2175, -0.4626, 0.8595, 0, -0.7126, 0.7126, -0.2175, -0.4626, 0.8595, 0, -0.4741, 0.88699996, 0, -0.7126, 0.7126, -0.2175, -0.4626, 0.8595, -0.2313, -0.2313, 0.945, 0, -0.4741, 0.88699996, -0.2313, -0.2313, 0.945, 0, -0.2386, 0.98389995, 0, -0.4741, 0.88699996, -0.2313, -0.2313, 0.945, -0.2357, 0, 0.97179997, 0, -0.2386, 0.98389995, -0.2357, 0, 0.97179997, 0, 0, 1, 0, -0.2386, 0.98389995, -0.2357, 0, 0.97179997, -0.2313, 0.2313, 0.945, 0, 0, 1, -0.2313, 0.2313, 0.945, 0, 0.2357, 0.97179997, 0, 0, 1, -0.2313, 0.2313, 0.945, -0.2175, 0.4626, 0.8595, 0, 0.2357, 0.97179997, -0.2175, 0.4626, 0.8595, 0, 0.4714, 0.88189995, 0, 0.2357, 0.97179997, -0.2175, 0.4626, 0.8595, -0.1929, 0.6953, 0.6953, 0, 0.4714, 0.88189995, -0.1929, 0.6953, 0.6953, 0, 0.7071, 0.7071, 0, 0.4714, 0.88189995, -0.3849, -0.6526, 0.6526, -0.4351, -0.4351, 0.7883, -0.1925, -0.6939, 0.6939, -0.4351, -0.4351, 0.7883, -0.2175, -0.4626, 0.8595, -0.1925, -0.6939, 0.6939, -0.4351, -0.4351, 0.7883, -0.4626, -0.2175, 0.8595, -0.2175, -0.4626, 0.8595, -0.4626, -0.2175, 0.8595, -0.2313, -0.2313, 0.945, -0.2175, -0.4626, 0.8595, -0.4626, -0.2175, 0.8595, -0.4714, 0, 0.88189995, -0.2313, -0.2313, 0.945, -0.4714, 0, 0.88189995, -0.2357, 0, 0.97179997, -0.2313, -0.2313, 0.945, -0.4714, 0, 0.88189995, -0.4626, 0.2175, 0.8595, -0.2357, 0, 0.97179997, -0.4626, 0.2175, 0.8595, -0.2313, 0.2313, 0.945, -0.2357, 0, 0.97179997, -0.4626, 0.2175, 0.8595, -0.4351, 0.4351, 0.7883, -0.2313, 0.2313, 0.945, -0.4351, 0.4351, 0.7883, -0.2175, 0.4626, 0.8595, -0.2313, 0.2313, 0.945, -0.4351, 0.4351, 0.7883, -0.38939998, 0.66029996, 0.66029996, -0.2175, 0.4626, 0.8595, -0.38939998, 0.66029996, 0.66029996, -0.1929, 0.6953, 0.6953, -0.2175, 0.4626, 0.8595, -0.57739997, -0.57739997, 0.57739997, -0.6526, -0.3849, 0.6526, -0.3849, -0.6526, 0.6526, -0.6526, -0.3849, 0.6526, -0.4351, -0.4351, 0.7883, -0.3849, -0.6526, 0.6526, -0.6526, -0.3849, 0.6526, -0.71919996, -0.1995, 0.71919996, -0.4351, -0.4351, 0.7883, -0.71919996, -0.1995, 0.71919996, -0.4626, -0.2175, 0.8595, -0.4351, -0.4351, 0.7883, -0.71919996, -0.1995, 0.71919996, -0.7071, 0, 0.7071, -0.4626, -0.2175, 0.8595, -0.7071, 0, 0.7071, -0.4714, 0, 0.88189995, -0.4626, -0.2175, 0.8595, -0.7071, 0, 0.7071, -0.6939, 0.1925, 0.6939, -0.4714, 0, 0.88189995, -0.6939, 0.1925, 0.6939, -0.4626, 0.2175, 0.8595, -0.4714, 0, 0.88189995, -0.6939, 0.1925, 0.6939, -0.6526, 0.3849, 0.6526, -0.4626, 0.2175, 0.8595, -0.6526, 0.3849, 0.6526, -0.4351, 0.4351, 0.7883, -0.4626, 0.2175, 0.8595, -0.6526, 0.3849, 0.6526, -0.57739997, 0.57739997, 0.57739997, -0.4351, 0.4351, 0.7883, -0.57739997, 0.57739997, 0.57739997, -0.38939998, 0.66029996, 0.66029996, -0.4351, 0.4351, 0.7883)

[node name="Planet" type="Node3D"]
script = ExtResource("1_6vnuc")
planet_data = SubResource("Resource_v7hk1")

[node name="MeshUp" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_bmu3h")
mesh = SubResource("ArrayMesh_p30nt")
surface_material_override/0 = SubResource("ShaderMaterial_cit8o")
script = ExtResource("2_4jp6r")
normal = Vector3(0, 1, 0)
resolution = 7
planet_data = SubResource("Resource_v7hk1")

[node name="MeshUp_col2" type="StaticBody3D" parent="MeshUp"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshUp/MeshUp_col2"]
shape = SubResource("ConcavePolygonShape3D_ndovs")

[node name="MeshDown" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_bmu3h")
mesh = SubResource("ArrayMesh_lmtad")
surface_material_override/0 = SubResource("ShaderMaterial_fpsbw")
script = ExtResource("2_4jp6r")
normal = Vector3(0, -1, 0)
resolution = 7
planet_data = SubResource("Resource_v7hk1")

[node name="MeshDown_col2" type="StaticBody3D" parent="MeshDown"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshDown/MeshDown_col2"]
shape = SubResource("ConcavePolygonShape3D_76h37")

[node name="MeshLeft" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_bmu3h")
mesh = SubResource("ArrayMesh_1wsln")
surface_material_override/0 = SubResource("ShaderMaterial_oltg6")
script = ExtResource("2_4jp6r")
normal = Vector3(-1, 0, 0)
resolution = 7
planet_data = SubResource("Resource_v7hk1")

[node name="MeshLeft_col2" type="StaticBody3D" parent="MeshLeft"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshLeft/MeshLeft_col2"]
shape = SubResource("ConcavePolygonShape3D_xlnx0")

[node name="MeshRight" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_bmu3h")
mesh = SubResource("ArrayMesh_gtl15")
surface_material_override/0 = SubResource("ShaderMaterial_ttgr5")
script = ExtResource("2_4jp6r")
normal = Vector3(1, 0, 0)
resolution = 7
planet_data = SubResource("Resource_v7hk1")

[node name="MeshRight_col2" type="StaticBody3D" parent="MeshRight"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshRight/MeshRight_col2"]
shape = SubResource("ConcavePolygonShape3D_oxaqy")

[node name="MeshFront" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_bmu3h")
mesh = SubResource("ArrayMesh_6mxh2")
surface_material_override/0 = SubResource("ShaderMaterial_rmqb1")
script = ExtResource("2_4jp6r")
normal = Vector3(0, 0, -1)
resolution = 7
planet_data = SubResource("Resource_v7hk1")

[node name="MeshFront_col2" type="StaticBody3D" parent="MeshFront"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshFront/MeshFront_col2"]
shape = SubResource("ConcavePolygonShape3D_k43qs")

[node name="MeshBack" type="MeshInstance3D" parent="."]
material_override = SubResource("ShaderMaterial_bmu3h")
mesh = SubResource("ArrayMesh_ko8lj")
surface_material_override/0 = SubResource("ShaderMaterial_cdojd")
script = ExtResource("2_4jp6r")
normal = Vector3(0, 0, 1)
resolution = 7
planet_data = SubResource("Resource_v7hk1")

[node name="MeshBack_col2" type="StaticBody3D" parent="MeshBack"]

[node name="CollisionShape3D" type="CollisionShape3D" parent="MeshBack/MeshBack_col2"]
shape = SubResource("ConcavePolygonShape3D_yrptl")
